---
title: "Preliminary Analysis"
date-modified: "today"
subtitle: "Bias in PERSUADE"
format: pdf
code-fold: false
code-overflow: wrap
editor: 
  markdown: 
    wrap: 80
---

```{r, message = FALSE, warning = FALSE}
library(sjPlot)
library(lme4)
library(car) # level names in contrasts
library(stargazer) # LaTeX tables
library(emmeans)
library(performance) # ICC
library(tidyverse)

df <- read.csv("../data/persuade_corpus.csv",
               na.strings = c("", " ", "NA")) %>% 
  select(-c(full_text, X, assignment, source_text)) %>%
  mutate_if(is.character, as.factor) %>%
  
  # drop American Indian/Alaskan Native group because there are < 200 samples
  filter(race_ethnicity != "American Indian/Alaskan Native") %>%
  
  # remove unused levels (American Indian)
  droplevels() %>% 
  
  # simplify level and variable names
  mutate(
    race=fct_recode(race_ethnicity,
                    asian="Asian/Pacific Islander",
                    black="Black/African American", 
                    hisp="Hispanic/Latino",
                    other="Two or more races/Other",
                    white="White")
    ) %>% 
  
  # collapse NaNs into negative level of binary factors
  mutate(
    is_ell=fct_collapse(addNA(ell), Yes = "Yes", No = c("No", NA)),
    is_disadvantaged=fct_collapse(addNA(economically_disadvantaged),
                                  Yes = "Economically disadvantaged",
                                  No = c("Not economically disadvantaged", NA)),
    has_disability=fct_collapse(addNA(student_disability_status),
                                  Yes = "Identified as having disability",
                                  No = c("Not identified as having disability", NA))
    ) %>%
  
  # set the first level, which will be used as "reference"
  mutate(
    is_disadvantaged=fct_relevel(is_disadvantaged, "No"),
    has_disability=fct_relevel(has_disability, "No"),
  )

# configure contrasts for race and source
options(decorate.contr.Sum = c("", ""))
contrasts(df$race) = contr.Sum(levels(df$race))
contrasts(df$source) = contr.Sum(levels(df$source))

summary(df)
```

```{r}
eval_model <- function(mod) {
  print(performance(mod))
  # print(tab_model(mod,
  #                 p.adjust="HB",
  #                 show.aic=TRUE,
  #                 show.re.var=TRUE,
  #                 # show.reflvl=TRUE,
  #                 prefix.labels="varname"
  #                 ))
}
```

```{r}
mod.null <-lmer(holistic_score_adjudicated ~ 1 + (1|prompt_name), data=df)
eval_model(mod.null)
```


# Simple model with just race

```{r}
mod.race <-lmer(holistic_score_adjudicated
                ~ race
                + (race|prompt_name),
                data=df
                )
eval_model(mod.race)
```

# All fixed effects

```{r}
mod.all_fixed_effects <- lmer(holistic_score_adjudicated 
                              ~ race
                              + grade
                              + is_disadvantaged
                              + is_ell
                              + has_disability 
                              # + source # slightly improves model fit, but is not of interest
                              + gender
                              + (1|prompt_name),
                              data=df
                              )
eval_model(mod.all_fixed_effects)
```

# Search for interactions

We drop grade because it was not significant, but we test for an interaction between grade and ell. We might expect interactions: race\*ses, race\*ell, and race\*disability.

```{r}
mod.interactions <- lmer(holistic_score_adjudicated 
                         ~ race
                         + is_disadvantaged
                         + is_ell
                         + has_disability 
                         + gender
                         # + race*is_disadvantaged # increases AIC
                         + race*is_ell
                         # + race*has_disability # increases AIC
                         # + race*source # increases AIC
                         # + race*gender # increases AIC
                         # + race*grade # increases AIC
                         + is_disadvantaged*has_disability
                         + is_disadvantaged*is_ell
                         + has_disability*is_ell
                         # + gender*has_disability # increases AIC
                         # + gender*is_disadvantaged # increases AIC
                         # + gender*is_ell # small decrease (-1) to AIC
                         + (1|prompt_name),
                         data=df
                         )
eval_model(mod.interactions)
```

# Search for random slopes

There are no good random slopes.

```{r}
mod.final <- mod.interactions
```


```{r}
emmip(mod.final, race~is_ell, mode = "asymp")
emmip(mod.final, is_disadvantaged~has_disability, mode = "asymp")
emmip(mod.final, is_disadvantaged~is_ell, mode = "asymp")
emmip(mod.final, has_disability~is_ell, mode = "asymp")
```

```{r}
coefs <- summary(mod.final)$coefficients
cat(rownames(coefs), sep="\", \"")
labels <- c("(Intercept)", "Asian/Pacific Islander", "Black/African American", "Hispanic/Latino", "Two or more races/Other", "Economically disadvantaged", "English language learner", "Identified as having disability", "Male", "Asian/Pacific Islander:English language learner", "Black/African American:English language learner", "Hispanic/Latino:English language learner", "Two or more races/Other:English language learner", "Economically disadvantaged:Identified as having disability", "English language learner:Economically disadvantaged", "English language learner:Identified as having disability", "English language learner:Male")

```


```{r, eval=FALSE}
tab_model(mod.final, 
          title = "Essay Scores Regressed on Demographic Variables",
          dv.labels = "Holistic Score",
          pred.labels = labels,
          emph.p = TRUE,
          p.adjust = "BH",
          # show.reflvl=TRUE,
          show.re.var=TRUE,
          file="../results/RQ1.html"
          )
```

