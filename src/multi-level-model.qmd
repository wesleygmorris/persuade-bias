---
title: "Multi-level Model"
date-modified: "today"
subtitle: "Bias in PERSUADE"
format: pdf
code-fold: false
code-overflow: wrap
editor: 
  markdown: 
    wrap: 80
---

```{r, message = FALSE, warning = FALSE}
library(sjPlot)
library(lme4)
library(car) # level names in contrasts
library(stargazer) # LaTeX tables
library(emmeans)
library(performance) # ICC
library(tidyverse)
library(forcats)

dfp <- read.csv("../data/persuade-predictions-long.csv",
               na.strings = c("", " ", "NA")) %>% 
  select(-c(full_text, X, assignment, source_text)) %>%
  mutate_if(is.character, as.factor) %>%
  
  # drop American Indian/Alaskan Native group because there are < 200 samples
  filter(race_ethnicity != "American Indian/Alaskan Native") %>%
  
  # remove unused levels (American Indian/Alaskan Native)
  droplevels() %>% 
  
  # simplify level and variable names
  mutate(
    Transformer=fct_recode(model,
                   Black="baa_pred",
                   Control="control_pred",
                   Hispanic="hl_pred",
                   White="w_pred"),
    race=fct_recode(race_ethnicity,
                    asian="Asian/Pacific Islander",
                    black="Black/African American", 
                    hisp="Hispanic/Latino",
                    other="Two or more races/Other",
                    white="White")
    ) %>% 
  
  # calculate root mean squared error
  mutate(rmse=sqrt(squared_error)) %>%
  
  # calculate percent error
  mutate(percent_error = (pred_error/holistic_score_adjudicated)*100) %>% 
  
  # collapse NaNs into negative level of binary factors
  mutate(
    is_ell=fct_collapse(addNA(ell), Yes = "Yes", No = c("No", NA)),
    is_disadvantaged=fct_collapse(addNA(economically_disadvantaged),
                                  Yes = "Economically disadvantaged",
                                  No = c("Not economically disadvantaged",
                                         NA)
                                  ),
    has_disability=fct_collapse(addNA(student_disability_status),
                                Yes = "Identified as having disability",
                                No = c("Not identified as having disability",
                                       NA)
                                )
    ) %>%
  
  # set the first level, which will be used as "reference"
  mutate(
    is_disadvantaged=fct_relevel(is_disadvantaged, "No"),
    has_disability=fct_relevel(has_disability, "No"),
    Transformer=fct_relevel(Transformer, "Control")
  ) %>% 
  
  mutate(
    Direction = case_when(
      pred_error >= 0 ~ "Positive",
      pred_error < 0 ~ "Negative"
      ),
    Direction = factor(Direction, levels=c("Positive","Negative")
                       )
  )


# configure contrasts for race and source
options(decorate.contr.Sum = c("", ""))
contrasts(dfp$race) = contr.Sum(levels(dfp$race))
contrasts(dfp$source) = contr.Sum(levels(dfp$source))

summary(dfp)
```
## Summary statistics

```{r}
dfp %>%
  filter(Transformer == "Control") %>%
  summarize(
    Score = mean(holistic_score_adjudicated),
    N = n(),
    ELLs = sum(as.numeric(is_ell)),
    Disability = sum(as.numeric(has_disability)),
    Disadvantaged = sum(as.numeric(is_disadvantaged)),
    .by=c(race_ethnicity)
    ) %>% 
  arrange(race_ethnicity)

```




## Model from Research Question 1

Just adding in transformer model as a predictor and a random intercept for essay ID. This model has poor fit, with many useless parameters. Prompt_name is no longer useful as a grouping variable, so we can drop it.

```{r, eval=FALSE}
mod.rq1 <- lmer(pred_error 
                ~ Transformer
                + gender
                + race*is_ell
                + is_disadvantaged*has_disability
                + is_disadvantaged*is_ell
                + has_disability*is_ell
                + (1|prompt_name)
                + (1|essay_id),
                data=dfp
                )
tab_model(mod.rq1, show.aic=TRUE, show.reflvl=TRUE, prefix.labels="varname", p.adjust = "BH")
```

## Tear-down

We would be left with very little in the model.

```{r, eval=FALSE}
fit.min <- lmer(pred_error
            ~ Transformer
            # + race # increases AIC
            # + source # increases AIC
            # + is_disadvantaged # increases AIC
            + is_ell
            + has_disability
            # + gender # increases AIC
            # + race*is_disadvantaged # increases AIC
            # + race*is_ell # increases AIC
            # + race*has_disability # increases AIC
            # + race*source # increases AIC
            # + race*gender # increases AIC
            # + race*grade # increases AIC
            # + is_disadvantaged*has_disability # increases AIC
            # + is_disadvantaged*is_ell # increases AIC
            # + has_disability*is_ell # increases AIC
            # + gender*has_disability # increases AIC
            # + gender*is_disadvantaged # increases AIC
            # + gender*is_ell # small decrease (-1) to AIC
            + (1 | essay_id),
            data=dfp
            )

tab_model(fit.min, show.aic=TRUE, show.reflvl=TRUE, prefix.labels="varname", p.adjust = "BH")
```

## Build-up: Interactions

While race did not help model fit on its own, its interaction with transformer model substantially improves model fit. The same pattern holds for interactions between transformer model and other demographic variables.

```{r}
fit <- lmer(pred_error
            ~ Transformer
            + Transformer*race
            + Transformer*is_ell
            + Transformer*has_disability
            + Transformer*is_disadvantaged
            + (1 | essay_id),
            REML = TRUE,
            data=dfp
            )

tab_model(fit, show.aic=TRUE, show.reflvl=TRUE, prefix.labels="varname", p.adjust = "BH")

```

## Save Table

```{r, eval=FALSE}
coefs <- summary(fit)$coefficients
cat(rownames(coefs), sep="\", \"")

labels <- c("(Intercept)",
            "Transformer[Black]",
            "Transformer[Hispanic]",
            "Transformer[White]",
            "Asian/Pacific Islander",
            "Black/African American",
            "Hispanic/Latino",
            "Two or more races/Other",
            "English language learner",
            "Identified as having disability",
            "Economically disadvantaged",
            "Transformer[Black]:Asian/Pacific Islander",
            "Transformer[Hispanic]:Asian/Pacific Islander",
            "Transformer[White]:Asian/Pacific Islander",
            "Transformer[Black]:Black/African American",
            "Transformer[Hispanic]:Black/African American",
            "Transformer[White]:Black/African American",
            "Transformer[Black]:Hispanic/Latino",
            "Transformer[Hispanic]:Hispanic/Latino",
            "Transformer[White]:Hispanic/Latino",
            "Transformer[Black]:Two or more races/Other",
            "Transformer[Hispanic]:Two or more races/Other",
            "Transformer[White]:Two or more races/Other",
            "Transformer[Black]:English language learner",
            "Transformer[Hispanic]:English language learner",
            "Transformer[White]:English language learner",
            "Transformer[Black]:Identified as having disability",
            "Transformer[Hispanic]:Identified as having disability",
            "Transformer[White]:Identified as having disability",
            "Transformer[Black]:Economically disadvantaged",
            "Transformer[Hispanic]:Economically disadvantaged",
            "Transformer[White]:Economically disadvantaged")
```

```{r, eval=FALSE}
tab_model(fit,
          title = "Prediction Error Regressed on Demographic Variables",
          dv.labels = "Prediction Error",
          show.aic=TRUE,
          show.reflvl=TRUE,
          prefix.labels="varname",
          p.adjust = "BH",
          pred.labels=labels,
          file = "../results/RQ2.html")
```

## Deviance Tests

These require non-restricted ML estimations.

```{r}
fit.ml <- lmer(pred_error
            ~ Transformer
            + Transformer*race
            # + Transformer*is_ell
            + Transformer*has_disability
            + Transformer*is_disadvantaged
            + (1 | essay_id),
            REML = FALSE,
            data=dfp
            )

fit.ell <- lmer(pred_error
            ~ Transformer
            + Transformer*race
            + Transformer*is_ell
            + Transformer*has_disability
            + Transformer*is_disadvantaged
            + (1 | essay_id),
            REML = FALSE,
            data=dfp
            )

1-pchisq(deviance(fit.ml) - deviance(fit.ell), df=2)
```
## RMSE

RMSE is more interpretable. Possibly a separate research question?

```{r, eval=FALSE}
fit.rmse <- lmer(rmse
            ~ Transformer
            + Transformer*race_ethnicity
            + Transformer*is_ell
            # + Transformer*has_disability
            + Transformer*is_disadvantaged
            + (1 | essay_id),
            REML = TRUE,
            data=dfp
            )

tab_model(fit.rmse, show.aic=TRUE, show.reflvl=TRUE, prefix.labels="varname", p.adjust = "BH")

```


## Interaction Plots

```{r}
# c("Asian/Pacific Islander",
#   "Black/African American",
#                "Hispanic/Latino",
#                "Two or more races/Other",
#                "White")

emmip(fit, race_ethnicity ~ Transformer,
      mode="asymp",
      type = "scale",
      style = "factor",
      tlab = "Race/Ethnicity",
      ylab = "Prediction Error",
      xlab = "Data used to Train Automatic Scoring System"
)
# ggsave("../results/transformer_race.png")
```
