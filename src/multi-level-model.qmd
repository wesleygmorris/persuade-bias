---
title: "Multi-level Model"
date-modified: "today"
subtitle: "Bias in PERSUADE"
format: pdf
code-fold: false
code-overflow: wrap
editor: 
  markdown: 
    wrap: 80
---

```{r, message = FALSE, warning = FALSE}
library(sjPlot)
library(lme4)
library(car) # level names in contrasts
library(stargazer) # LaTeX tables
library(emmeans)
library(performance) # ICC
library(tidyverse)
library(forcats)

dfp <- read.csv("../data/persuade-predictions-long.csv",
               na.strings = c("", " ", "NA")) %>% 
  select(-c(full_text, X, assignment, source_text)) %>%
  mutate_if(is.character, as.factor) %>%
  
  # drop American Indian/Alaskan Native group because there are < 200 samples
  filter(race_ethnicity != "American Indian/Alaskan Native") %>%
  
  # remove unused levels (American Indian)
  droplevels() %>% 
  
  # simplify level and variable names
  mutate(
    trf=fct_recode(model,
                   black="baa_pred",
                   ctrl="control_pred",
                   hisp="hl_pred",
                   white="w_pred"),
    race=fct_recode(race_ethnicity,
                    asian="Asian/Pacific Islander",
                    black="Black/African American", 
                    hisp="Hispanic/Latino",
                    other="Two or more races/Other",
                    white="White")
    ) %>% 
  
  # calculate root mean squared error
  mutate(rmse=sqrt(squared_error)) %>% 
  
  # collapse NaNs into negative level of binary factors
  mutate(
    is_ell=fct_collapse(addNA(ell), Yes = "Yes", No = c("No", NA)),
    is_disadvantaged=fct_collapse(addNA(economically_disadvantaged),
                                  Yes = "Economically disadvantaged",
                                  No = c("Not economically disadvantaged", NA)),
    has_disability=fct_collapse(addNA(student_disability_status),
                                  Yes = "Identified as having disability",
                                  No = c("Not identified as having disability", NA))
    ) %>%
  
  # set the first level, which will be used as "reference"
  mutate(
    is_disadvantaged=fct_relevel(is_disadvantaged, "No"),
    has_disability=fct_relevel(has_disability, "No"),
    trf=fct_relevel(trf, "ctrl")
  )


# configure contrasts for race and source
options(decorate.contr.Sum = c("", ""))
contrasts(dfp$race) = contr.Sum(levels(dfp$race))
contrasts(dfp$source) = contr.Sum(levels(dfp$source))

summary(dfp)
```
## Model from Research Question 1

Just adding in transformer model as a predictor and a random intercept for essay ID. This model has poor fit, with many useless parameters. Prompt_name is no longer useful as a grouping variable, so we can drop it.

```{r}
mod.rq1 <- lmer(pred_error 
                ~ trf
                + gender
                + race*is_ell
                + is_disadvantaged*has_disability
                + is_disadvantaged*is_ell
                + has_disability*is_ell
                + (1|prompt_name)
                + (1|essay_id),
                data=dfp
                )
tab_model(mod.rq1, show.aic=TRUE, show.reflvl=TRUE, prefix.labels="varname", p.adjust = "BH")
```

## Tear-down
We would be left with very little in the model.

```{r}
fit <- lmer(pred_error
            ~ trf
            # + race # increases AIC
            # + source # increases AIC
            # + is_disadvantaged # increases AIC
            + is_ell
            + has_disability
            # + gender # increases AIC
            # + race*is_disadvantaged # increases AIC
            # + race*is_ell # increases AIC
            # + race*has_disability # increases AIC
            # + race*source # increases AIC
            # + race*gender # increases AIC
            # + race*grade # increases AIC
            # + is_disadvantaged*has_disability # increases AIC
            # + is_disadvantaged*is_ell # increases AIC
            # + has_disability*is_ell # increases AIC
            # + gender*has_disability # increases AIC
            # + gender*is_disadvantaged # increases AIC
            # + gender*is_ell # small decrease (-1) to AIC
            + (1 | essay_id),
            data=dfp
            )

tab_model(fit, show.aic=TRUE, show.reflvl=TRUE, prefix.labels="varname", p.adjust = "BH")
```

## Build-up: Interactions

While race did not help model fit on its own, its interaction with transformer model substantially improves model fit.

```{r}
fit <- lmer(pred_error
            ~ trf
            + trf*race
            + trf*is_ell
            + trf*has_disability
            + trf*is_disadvantaged
            + (1 | essay_id),
            data=dfp
            )

tab_model(fit, show.aic=TRUE, show.reflvl=TRUE, prefix.labels="varname", p.adjust = "BH")
```

```{r}
plot(emmeans(fit, "race ~ trf", mode="asymp"), comparisons = TRUE)

emmip(fit, trf ~ has_disability, mode="asymp", style = "factor")
```
